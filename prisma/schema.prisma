generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  name         String?
  passwordHash String
  orders       Order[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Product {
  id              Int              @id @default(autoincrement())
  name            String
  description     String
  price           Float
  category        String
  imageUrl        String
  productVariants ProductVariant[]
  orderProducts   OrderProduct[]   @relation("ProductOrderProducts")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model Size {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  productVariants ProductVariant[]
}

model Color {
  id              Int              @id @default(autoincrement())
  name            String           @unique
  productVariants ProductVariant[]
}

model ProductVariant {
  id        Int      @id @default(autoincrement())
  sizeId    Int
  size      Size     @relation(fields: [sizeId], references: [id])
  colorId   Int
  color     Color    @relation(fields: [colorId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
}

model Order {
  id        Int       @id @default(autoincrement())
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  products  OrderProduct[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model OrderProduct {
  id        Int      @id @default(autoincrement())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade, name: "ProductOrderProducts")
  quantity  Int
}
